Процедура ОбработкаПроведения(Отказ, РежимПроведения) 
Движения.Продажи.Записывать = Истина;
    Движения.ТоварыНаСкладах.Записывать = Истина;
    Если ЗначениеЗаполнено(ДокументОснование) Тогда
    Движения.ЗаказыКлиентов.Записывать = Истина;
    КонецЕсли;
    Движения.УчетЗатрат.Записывать = Истина;
    
    Движения.ТоварыНаСкладах.Записать();
    
    Блокировка = Новый БлокировкаДанных;
ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный; 
ЭлементБлокировки.ИсточникДанных = Товары; 
ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар"); 
ЭлементБлокировки.УстановитьЗначение("Склад", Склад); 
Блокировка.Заблокировать();


Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
Запрос.Текст =
 "ВЫБРАТЬ
 |    РеализацияТоваровИУслугТовары.Товар КАК Номенклатура,
 |    СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
 |    СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма,
 |    РеализацияТоваровИУслуг.Склад КАК Склад
 |ПОМЕСТИТЬ ВТ_Товары
 |ИЗ
 |    Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
 |        ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
 |        ПО РеализацияТоваровИУслугТовары.Ссылка = РеализацияТоваровИУслуг.Ссылка
 |ГДЕ
 |    РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
 |    И РеализацияТоваровИУслуг.Ссылка = &Ссылка
 |
 |СГРУППИРОВАТЬ ПО
 |    РеализацияТоваровИУслугТовары.Товар,
 |    РеализацияТоваровИУслуг.Склад
 |
 |ОБЪЕДИНИТЬ ВСЕ
 |
 |ВЫБРАТЬ
 |    РеализацияТоваровИУслугУслуги.Услуга,
 |    NULL,
 |    СУММА(РеализацияТоваровИУслугУслуги.Сумма),
 |    NULL
 |ИЗ
 |    Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
 |ГДЕ
 |    РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
 |
 |СГРУППИРОВАТЬ ПО
 |    РеализацияТоваровИУслугУслуги.Услуга
 |
 |ИНДЕКСИРОВАТЬ ПО
 |    Номенклатура,
 |    Склад
 |;
 |
 |////////////////////////////////////////////////////////////////////////////////
 |ВЫБРАТЬ
 |    ВТ_Товары.Номенклатура КАК Номенклатура,
 |    ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
 |    ВТ_Товары.Количество КАК КоличествоВДокументе,
 |    ВТ_Товары.Сумма КАК СуммаВДокументе,
 |    ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
 |    ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
 |    ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
 |    ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
 |    ВТ_Товары.Склад КАК Склад,
 |    ВЫБОР
 |        КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипНоменклатуры.Услуга)
 |            ТОГДА ЛОЖЬ
 |        ИНАЧЕ ИСТИНА
 |    КОНЕЦ КАК ЭтоТовар
 |ИЗ
 |    ВТ_Товары КАК ВТ_Товары
 |        ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
 |                &МоментВремени,
 |                (Номенклатура, Склад) В
 |                    (ВЫБРАТЬ
 |                        ВТ_Товары.Номенклатура,
 |                        ВТ_Товары.Склад
 |                    ИЗ
 |                        ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
 |        ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
 |
 |УПОРЯДОЧИТЬ ПО
 |    ТоварыНаСкладахОстатки.СрокГодности
 |ИТОГИ
 |    МАКСИМУМ(КоличествоВДокументе),
 |    МАКСИМУМ(СуммаВДокументе),
 |    СУММА(КоличествоОстаток)
 |ПО
 |    Номенклатура";
 Запрос.УстановитьПараметр("Ссылка", Ссылка);
Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));

ВыборкаНоменклатура = 
Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
Пока ВыборкаНоменклатура.Следующий() Цикл 
Если ВыборкаНоменклатура.ЭтоТовар Тогда

        СтоимостьОбщая = 0; 
        
        Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток; 
        Если Превышение > 0 Тогда 
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
            Сообщение.Сообщить();
            Если Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() Тогда
            
            Отказ = Истина;
            Иначе;

КонецЕсли;
            КонецЕсли;

        Если Отказ Тогда 
            Продолжить;
        КонецЕсли;                                                                                     

        ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе; 

        ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
        Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл 
            Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
            
            Себестоимость=ВыборкаДетальные.СуммаОстаток/ВыборкаДетальные.КоличествоОстаток;
            Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
            Движение.Период = Дата;
            Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
            Движение.Склад = ВыборкаДетальные.Склад;
            Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
            Движение.Количество = Списываем;
            Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда 
                Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
            Иначе
                Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
            КонецЕсли;

            ОсталосьСписать = ОсталосьСписать - Списываем; 
            СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;

        КонецЦикла;
        Если ОсталосьСписать > 0 и Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() = Ложь Тогда
            Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
                Движение.Период = Дата;
                Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
                Движение.Склад = ВыборкаДетальные.Склад;
                Движение.Количество = ОсталосьСписать;
                Движение.Сумма=ОсталосьСписать*Себестоимость;
                СтоимостьОбщая=СтоимостьОбщая+Движение.Сумма;
        КонецЕсли;
        
        Движение = Движения.УчетЗатрат.Добавить(); 
        Движение.Период = Дата;
        Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
        Движение.Сумма = СтоимостьОбщая;

        Иначе 
        
        Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.ЗаказыКлиентов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаУслуги.Услуга;
		Движение.Клиент = Клиент;
		Движение.ЗаписьКлиента = ДокументОснование;
		Движение.ДатаЗаписи = Дата;
		Движение.Сумма = ТекСтрокаУслуги.Сумма;
		Движение.Количество = ТекСтрокаУслуги.Количество
		КонецЦикла
    КонецЕсли;


    
        Движение = Движения.Продажи.Добавить(); 
		Движение.Период = Дата;
        Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
        Движение.Сотрудник = Сотрудник;
        Движение.Клиент = Клиент;
        Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;  
		Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе; 
		КонецЦикла;
Движения.ЗаказыКлиентов.БлокироватьДляИзменения = Истина; //1
Движения.ЗаказыКлиентов.Записать();

Запрос.Текст=
"ВЫБРАТЬ
|    ЗаказыКлиентовОстатки.Клиент КАК Клиент,
|    ЗаказыКлиентовОстатки.ДатаЗаписи КАК ДатаЗаписи,
|    ЗаказыКлиентовОстатки.Клиент.Представление КАК КлиентПредставление,
|    ЗаказыКлиентовОстатки.ЗаписьКлиента КАК ЗаписьКлиента
|ИЗ
|    РегистрНакопления.ЗаказыКлиентов.Остатки(
|            &МоментВремени,
|            ЗаписьКлиента = &ЗаписьКлиента
|                И Клиент = &Клиент
|                И ДатаЗаписи = &ДатаЗаписи) КАК ЗаказыКлиентовОстатки
| ГДЕ ЗаказыКлиентовОстатки.КоличествоОстаток < 0"
;

Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
Запрос.УстановитьПараметр("Клиент", Клиент);
Запрос.УстановитьПараметр("ДатаЗаписи", Дата);
Запрос.УстановитьПараметр("ЗаписьКлиента", ДокументОснование);

Результат = Запрос.Выполнить(); //2

Если Не Результат.Пустой() Тогда //3
    Отказ = Истина;
    Выборка = Результат.Выбрать();
    Пока Выборка.Следующий() Цикл
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = СтрШаблон("Услуга для клиента ""%1""  на дату ""%2"" уже была обработана или не была найдена такая запись!",  Выборка.КлиентПредставление, Формат(Выборка.ДатаЗаписи, "ДФ=dd.MM.yy"));
        Сообщение.Сообщить();
    КонецЦикла;
КонецЕсли; 
КонецПроцедуры
